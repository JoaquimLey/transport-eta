/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]

// Plugins
versions.kotlin = "1.2.60"
versions.kotlin_serialization = "0.6.1"
versions.android_gradle_plugin = '3.3.0-alpha03'

// Javax
versions.javax_inject = "1"
versions.javax_annotation = "1.0"

// DI
versions.dagger = "2.16"

// Rx
versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"

// Kotlin
versions.kotlin_rx = "2.1.0"

// AndroidX
versions.slice = "1.0.0-alpha2"
versions.core_ktx = "1.0.0-alpha1"
versions.material = "1.0.0-alpha1"
versions.fragment = "1.0.0-alpha2"
versions.appcompat = "1.0.0-alpha2"
versions.card_view = "1.0.0-alpha1"
versions.annotation = "1.0.0-alpha1"
versions.constraint_layout = "1.1.0"
versions.recycler_view = "1.0.0-alpha2"

// Architecture components
versions.room = "2.0.0-beta01"
versions.paging = "2.0.0-beta01"
versions.lifecycle = "2.0.0-beta01"
versions.navigation = "1.0.0-alpha06"
versions.work_manager = "1.0.0-alpha09"

// Android Utils
versions.glide = "3.8.0"
versions.timber = "4.6.0"
versions.lottie = "2.5.1"

// Networking
versions.gson = "2.8.2"
versions.okhttp = "3.8.1"
versions.retrofit = "2.3.0"
versions.okhttp_logging_interceptor = "3.9.0"

// Testing
versions.junit = "4.12"
versions.hamcrest = "1.3"
versions.espresso = "3.0.1"
versions.mockito = "2.19.1"
versions.mockito_kotlin = "2.0.0-RC1"
versions.atsl_rules = "1.0.1"
versions.atsl_runner = "1.0.2"
versions.robolectric = "4.0-beta-2-SNAPSHOT" // "3.8"
versions.dexmaker_linkedin = "2.19.0"
versions.dexmaker_linkedin_inline = "2.19.0"

def deps = [:]

def androidx = [:]
androidx.slice = "androidx.slice:slice-view:$versions.slice"
androidx.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
androidx.fragment = "androidx.fragment:fragment:$versions.fragment"
androidx.cardview = "androidx.cardview:cardview:$versions.card_view"
androidx.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
androidx.annotation = "androidx.annotation:annotation:$versions.annotation"
androidx.material = "com.google.android.material:material:$versions.material"
androidx.recycler_view = "androidx.recyclerview:recyclerview:$versions.recycler_view"
androidx.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.androidx = androidx

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.testing = "androidx.arch.core:core-testing:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.viewmodel = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime:$versions.paging"
paging.rxjava2 = "androidx.paging:paging-rxjava2:$versions.paging"
paging.testing = "androidx.paging:paging-common:$versions.paging"
deps.paging = paging

def navigation =[:]
navigation.fragment = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "android.arch.navigation:navigation-ui-ktx:$versions.navigation"
navigation.testing = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
navigation.safe_args = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

def work_manager = [:]
work_manager.runtime = "android.arch.work:work-runtime-ktx:$versions.work_manager"
work_manager.jobdispatcher = "android.arch.work:work-firebase:$versions.work_manager"
work_manager.testing = "android.arch.work:work-testing:$versions.work_manager"
deps.work_manager = work_manager

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.converter_gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.rxjava = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

deps.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.gson = "com.google.code.gson:gson:$versions.gson"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def javax = [:]
javax.annotation = "javax.annotation:jsr250-api:$versions.javax_annotation"
javax.inject     = "javax.inject:javax.inject:$versions.javax_inject"
deps.javax = javax

def espresso = [:]
espresso.core = "com.android.support.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "com.android.support.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "com.android.support.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.runner = "com.android.support.test:runner:$versions.atsl_runner"
atsl.rules = "com.android.support.test:rules:$versions.atsl_runner"
atsl.orchestrator = "com.android.support.test:orchestrator:$versions.atsl_runner"
deps.atsl = atsl

deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.inline = "org.mockito:mockito-inline:$versions.mockito"
mockito.android = "org.mockito:mockito-android:$versions.mockito"
mockito.kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockito_kotlin"
deps.mockito = mockito

def kotlin = [:]
kotlin.rx = "io.reactivex.rxjava2:rxkotlin:$versions.kotlin_rx"
kotlin.test = "org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.junit = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.serialization = "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$versions.kotlin_serialization"
kotlin.serialization_plugin = "org.jetbrains.kotlinx:kotlinx-gradle-serialization-plugin:$versions.kotlin_serialization"
deps.kotlin = kotlin

def rx = [:]
rx.java2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx = rx

def dexmaker = [:]
dexmaker.stdlib = "com.google.dexmaker:dexmaker:$versions.dexmaker"
dexmaker.mockito = "com.google.dexmaker:dexmaker-mockito:$versions.dexmaker_mockito"
dexmaker.linkedin = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker_linkedin"
dexmaker.linkedin_inline = "com.linkedin.dexmaker:dexmaker-mockito-inline:$versions.dexmaker_linkedin_inline"
deps.dexmaker = dexmaker

deps.assertj = "org.assertj:assertj-core:$versions.assertj"
deps.glide = "com.github.bumptech.glide:glide:$versions.glide"
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.lottie = "com.airbnb.android:lottie:$versions.lottie"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.jacoco_android_plugin = "com.dicedmelon.gradle:jacoco-android:$versions.jacoco_android_version"
ext.deps = deps

def build_versions = [:]
build_versions.compile_sdk = 28
build_versions.min_sdk = 19
build_versions.target_sdk = 28
ext.build_versions = build_versions

def app_version = [:]
app_version.versionCode = 1
app_version.versionName = "1.0.0"
ext.app_version = app_version

static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()

    // For Kotlinx serialization
    handler.maven { url "https://kotlin.bintray.com/kotlinx" }
    // For Robolectric 4.0-snapshot
    handler.maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}
ext.addRepos = this.&addRepos